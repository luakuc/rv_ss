!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
$(DISK_IMG)	Makefile	/^$(DISK_IMG):$/;"	t
$(IMAGE)	Makefile	/^$(IMAGE): $(OBJS)$/;"	t
.S.o	Makefile	/^.S.o:$/;"	t
.c.o	Makefile	/^.c.o:$/;"	t
.text	script.ld	/^    .text :$/;"	S
CC	Makefile	/^CC			:= $(RISCV_TOOLS)\/bin\/$(TOOL)gcc$/;"	m
CCFLAGS	Makefile	/^CCFLAGS		:=-march=rv64ima -mabi=lp64 -nostdlib -ggdb3 -mcmodel=medany -Wall -Iinclude\/$/;"	m
CSR_CYCLE	include/csr.h	/^#define CSR_CYCLE /;"	d
CSR_HEDELEG	include/csr.h	/^#define CSR_HEDELEG /;"	d
CSR_HGATP	include/csr.h	/^#define CSR_HGATP /;"	d
CSR_HIDELEG	include/csr.h	/^#define CSR_HIDELEG /;"	d
CSR_HSTATUS	include/csr.h	/^#define CSR_HSTATUS /;"	d
CSR_INSTRET	include/csr.h	/^#define CSR_INSTRET /;"	d
CSR_SATP	include/csr.h	/^#define CSR_SATP /;"	d
CSR_SCAUSE	include/csr.h	/^#define CSR_SCAUSE /;"	d
CSR_SCOUNTEREN	include/csr.h	/^#define CSR_SCOUNTEREN /;"	d
CSR_SEPC	include/csr.h	/^#define CSR_SEPC /;"	d
CSR_SIE	include/csr.h	/^#define CSR_SIE /;"	d
CSR_SIP	include/csr.h	/^#define CSR_SIP /;"	d
CSR_SSCRATCH	include/csr.h	/^#define CSR_SSCRATCH /;"	d
CSR_SSTATUS	include/csr.h	/^#define CSR_SSTATUS /;"	d
CSR_STVAL	include/csr.h	/^#define CSR_STVAL /;"	d
CSR_STVEC	include/csr.h	/^#define CSR_STVEC /;"	d
CSR_TIME	include/csr.h	/^#define CSR_TIME /;"	d
DEVICE_FEATURES	virtio_mmio.c	/^#define DEVICE_FEATURES /;"	d	file:
DEVICE_FEATURES_SEL	virtio_mmio.c	/^#define DEVICE_FEATURES_SEL /;"	d	file:
DEVICE_ID	virtio_mmio.c	/^#define DEVICE_ID /;"	d	file:
DEVICE_ID_BLOCK_DEVICE	virtio_mmio.c	/^    DEVICE_ID_BLOCK_DEVICE = 2,$/;"	e	enum:device_type	file:
DEVICE_ID_CONSOLE	virtio_mmio.c	/^    DEVICE_ID_CONSOLE = 3,$/;"	e	enum:device_type	file:
DEVICE_ID_NETWORK_CARD	virtio_mmio.c	/^    DEVICE_ID_NETWORK_CARD = 1,$/;"	e	enum:device_type	file:
DEVICE_ID_RESERVED	virtio_mmio.c	/^    DEVICE_ID_RESERVED = 0,$/;"	e	enum:device_type	file:
DISK_IMG	Makefile	/^DISK_IMG	:= disk.img$/;"	m
DRIVER_FEATURES	virtio_mmio.c	/^#define DRIVER_FEATURES /;"	d	file:
DRIVER_FEATURES_SEL	virtio_mmio.c	/^#define DRIVER_FEATURES_SEL /;"	d	file:
FDT_BEGIN_NODE	include/fdt_core.h	/^#define FDT_BEGIN_NODE /;"	d
FDT_END	include/fdt_core.h	/^#define FDT_END /;"	d
FDT_END_NODE	include/fdt_core.h	/^#define FDT_END_NODE /;"	d
FDT_HEADER_MAGIC	include/fdt_core.h	/^#define FDT_HEADER_MAGIC /;"	d
FDT_NOP	include/fdt_core.h	/^#define FDT_NOP /;"	d
FDT_PROP	include/fdt_core.h	/^#define FDT_PROP /;"	d
FIFO_CONTROL_REGISTER	include/uart_regs.h	/^#define FIFO_CONTROL_REGISTER /;"	d
FIRMWARE	Makefile	/^FIRMWARE	:= $(RISCV_TOOLS)\/platform\/qemu\/virt\/firmware\/fw_jump.elf$/;"	m
GDB	Makefile	/^GDB			:= $(RISCV_TOOLS)\/bin\/$(TOOL)gdb$/;"	m
HGATP_MODE_BARE	vmm/mmu.h	/^#define HGATP_MODE_BARE /;"	d
HGATP_MODE_SV39X4	vmm/mmu.h	/^#define HGATP_MODE_SV39X4 /;"	d
HGATP_MODE_SV48X4	vmm/mmu.h	/^#define HGATP_MODE_SV48X4 /;"	d
HSTATUS_SP2P	include/register.h	/^#define HSTATUS_SP2P /;"	d
HSTATUS_SP2V	include/register.h	/^#define HSTATUS_SP2V /;"	d
HSTATUS_SPRV	include/register.h	/^#define HSTATUS_SPRV /;"	d
HSTATUS_SPV	include/register.h	/^#define HSTATUS_SPV /;"	d
HSTATUS_STL	include/register.h	/^#define HSTATUS_STL /;"	d
HSTATUS_VTSR	include/register.h	/^#define HSTATUS_VTSR /;"	d
HSTATUS_VTVM	include/register.h	/^#define HSTATUS_VTVM /;"	d
IMAGE	Makefile	/^IMAGE	:= rvss$/;"	m
INTERRUPT_ACK	virtio_mmio.c	/^#define INTERRUPT_ACK /;"	d	file:
INTERRUPT_ENABLE_REGISTER	include/uart_regs.h	/^#define INTERRUPT_ENABLE_REGISTER /;"	d
INTERRUPT_STATUS	virtio_mmio.c	/^#define INTERRUPT_STATUS /;"	d	file:
INTERRUPT_STATUS_REGISTER	include/uart_regs.h	/^#define INTERRUPT_STATUS_REGISTER /;"	d
LD	Makefile	/^LD			:= $(RISCV_TOOLS)\/bin\/$(TOOL)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS		:= -T script.ld$/;"	m
LINE_CONTROL_REGISTER	include/uart_regs.h	/^#define LINE_CONTROL_REGISTER /;"	d
LINE_STATUS_REGISTER	include/uart_regs.h	/^#define LINE_STATUS_REGISTER /;"	d
LSB_OF_DIVISOR_LATCH	include/uart_regs.h	/^#define LSB_OF_DIVISOR_LATCH /;"	d
LSR_RX_DATA_READY	include/uart_regs.h	/^#define LSR_RX_DATA_READY /;"	d
LSR_TX_HOLDING_EMPTY	include/uart_regs.h	/^#define LSR_TX_HOLDING_EMPTY /;"	d
MACHINE	Makefile	/^MACHINE		:= virt$/;"	m
MAGIC_VALUE	virtio_mmio.c	/^#define MAGIC_VALUE /;"	d	file:
MODEM_CONTROL_REGISTER	include/uart_regs.h	/^#define MODEM_CONTROL_REGISTER /;"	d
MODEM_STATUS_REGISTER	include/uart_regs.h	/^#define MODEM_STATUS_REGISTER /;"	d
MSB_OF_DIVISOR_LATCH	include/uart_regs.h	/^#define MSB_OF_DIVISOR_LATCH /;"	d
OBJS	Makefile	/^OBJS		:= entry.o main.o memory_map_content.o plic.o trap.o csr_func.o trap_handler.o uart.o regi/;"	m
PAGE_SIZE	virtio_mmio.c	/^#define PAGE_SIZE /;"	d	file:
PLIC_INTE_PRIORITY_REG_PRIORITY	include/plic_defs.h	/^#define PLIC_INTE_PRIORITY_REG_PRIORITY /;"	d
PLIC_INTE_PRIORITY_REG_RESERVED	include/plic_defs.h	/^#define PLIC_INTE_PRIORITY_REG_RESERVED /;"	d
PTE_FLAG_ACCESS	include/virtual_memory.h	/^#define PTE_FLAG_ACCESS /;"	d
PTE_FLAG_DIRTY	include/virtual_memory.h	/^#define PTE_FLAG_DIRTY /;"	d
PTE_FLAG_EXEC	include/virtual_memory.h	/^#define PTE_FLAG_EXEC /;"	d
PTE_FLAG_GLOBAL	include/virtual_memory.h	/^#define PTE_FLAG_GLOBAL /;"	d
PTE_FLAG_READ	include/virtual_memory.h	/^#define PTE_FLAG_READ /;"	d
PTE_FLAG_USER	include/virtual_memory.h	/^#define PTE_FLAG_USER /;"	d
PTE_FLAG_VALID	include/virtual_memory.h	/^#define PTE_FLAG_VALID /;"	d
PTE_FLAG_WRITE	include/virtual_memory.h	/^#define PTE_FLAG_WRITE /;"	d
QEMU	Makefile	/^QEMU		:= ..\/qemu\/riscv64-softmmu\/qemu-system-riscv64$/;"	m
QEMU_FLAGS	Makefile	/^QEMU_FLAGS	:= -monitor null -cpu rv64,x-h=true -display none -serial mon:stdio \\$/;"	m
QEMU_MAGIC_VALUE	virtio_mmio.c	/^#define QEMU_MAGIC_VALUE /;"	d	file:
QEMU_VIRT_PLIC_BASE	include/plic_defs.h	/^#define QEMU_VIRT_PLIC_BASE /;"	d
QUEUE_AVAIL_HIGH	virtio_mmio.c	/^#define QUEUE_AVAIL_HIGH /;"	d	file:
QUEUE_AVAIL_LOW	virtio_mmio.c	/^#define QUEUE_AVAIL_LOW /;"	d	file:
QUEUE_DESC_HIGH	virtio_mmio.c	/^#define QUEUE_DESC_HIGH /;"	d	file:
QUEUE_DESC_LOW	virtio_mmio.c	/^#define QUEUE_DESC_LOW /;"	d	file:
QUEUE_NOTIFY	virtio_mmio.c	/^#define QUEUE_NOTIFY /;"	d	file:
QUEUE_NUM	virtio_mmio.c	/^#define QUEUE_NUM /;"	d	file:
QUEUE_NUM_MAX	virtio_mmio.c	/^#define QUEUE_NUM_MAX /;"	d	file:
QUEUE_READY	virtio_mmio.c	/^#define QUEUE_READY /;"	d	file:
QUEUE_SEL	virtio_mmio.c	/^#define QUEUE_SEL /;"	d	file:
QUEUE_USED_HIGH	virtio_mmio.c	/^#define QUEUE_USED_HIGH /;"	d	file:
QUEUE_USED_LOW	virtio_mmio.c	/^#define QUEUE_USED_LOW /;"	d	file:
RAM_SIZE	Makefile	/^RAM_SIZE	:= 128M$/;"	m
RECEIVE_HOLDING_REGISTER	include/uart_regs.h	/^#define RECEIVE_HOLDING_REGISTER /;"	d
RISCV_TOOLS	Makefile	/^RISCV_TOOLS	:= ..\/local$/;"	m
RV64_LOAD_DEST_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_LOAD_DEST_SHIFT_AMOUNT /;"	d
RV64_LOAD_OFFSET_MASK	vmm/instruction.h	/^#define RV64_LOAD_OFFSET_MASK /;"	d
RV64_LOAD_OFFSET_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_LOAD_OFFSET_SHIFT_AMOUNT /;"	d
RV64_LOAD_STORE_BASE_MASK	vmm/instruction.h	/^#define RV64_LOAD_STORE_BASE_MASK /;"	d
RV64_LOAD_STORE_BASE_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_LOAD_STORE_BASE_SHIFT_AMOUNT /;"	d
RV64_LOAD_STORE_DEST_MASK	vmm/instruction.h	/^#define RV64_LOAD_STORE_DEST_MASK /;"	d
RV64_LOAD_STORE_WIDTH_BYTE	vmm/inst_emu.h	/^#define RV64_LOAD_STORE_WIDTH_BYTE /;"	d
RV64_LOAD_STORE_WIDTH_HALF	vmm/inst_emu.h	/^#define RV64_LOAD_STORE_WIDTH_HALF /;"	d
RV64_LOAD_STORE_WIDTH_LONG	vmm/inst_emu.h	/^#define RV64_LOAD_STORE_WIDTH_LONG /;"	d
RV64_LOAD_STORE_WIDTH_MASK	vmm/instruction.h	/^#define RV64_LOAD_STORE_WIDTH_MASK /;"	d
RV64_LOAD_STORE_WIDTH_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_LOAD_STORE_WIDTH_SHIFT_AMOUNT /;"	d
RV64_LOAD_STORE_WIDTH_WORD	vmm/inst_emu.h	/^#define RV64_LOAD_STORE_WIDTH_WORD /;"	d
RV64_OPCODE_LOAD	vmm/instruction.h	/^#define RV64_OPCODE_LOAD /;"	d
RV64_OPCODE_MASK	vmm/instruction.h	/^#define RV64_OPCODE_MASK /;"	d
RV64_OPCODE_STORE	vmm/instruction.h	/^#define RV64_OPCODE_STORE /;"	d
RV64_OPCODE_SYSTEM	vmm/instruction.h	/^#define RV64_OPCODE_SYSTEM /;"	d
RV64_STORE_OFFSET0_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_STORE_OFFSET0_SHIFT_AMOUNT /;"	d
RV64_STORE_OFFSET5_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_STORE_OFFSET5_SHIFT_AMOUNT /;"	d
RV64_STORE_OFFSET_MASK	vmm/instruction.h	/^#define RV64_STORE_OFFSET_MASK /;"	d
RV64_STORE_SRC_MASK	vmm/instruction.h	/^#define RV64_STORE_SRC_MASK /;"	d
RV64_STORE_SRC_SHIFT_AMOUNT	vmm/instruction.h	/^#define RV64_STORE_SRC_SHIFT_AMOUNT /;"	d
RV64_WFI	vmm/instruction.h	/^#define RV64_WFI /;"	d
SATP_MODE_BARE	include/virtual_memory.h	/^#define SATP_MODE_BARE /;"	d
SATP_MODE_SV39	include/virtual_memory.h	/^#define SATP_MODE_SV39 /;"	d
SATP_MODE_SV48	include/virtual_memory.h	/^#define SATP_MODE_SV48 /;"	d
SBI_ERR_DENIED	vmm/sbi_emu.h	/^#define SBI_ERR_DENIED /;"	d
SBI_ERR_FAILURE	vmm/sbi_emu.h	/^#define SBI_ERR_FAILURE /;"	d
SBI_ERR_INVALID_ADDRESS	vmm/sbi_emu.h	/^#define SBI_ERR_INVALID_ADDRESS /;"	d
SBI_ERR_INVALID_PARAM	vmm/sbi_emu.h	/^#define SBI_ERR_INVALID_PARAM /;"	d
SBI_ERR_NOT_SUPPORTED	vmm/sbi_emu.h	/^#define SBI_ERR_NOT_SUPPORTED /;"	d
SBI_EXT_ID_BASE_FUNC	vmm/sbi_emu.c	/^#define SBI_EXT_ID_BASE_FUNC /;"	d	file:
SBI_EXT_ID_CLEAR_IPI	vmm/sbi_emu.c	/^#define SBI_EXT_ID_CLEAR_IPI /;"	d	file:
SBI_EXT_ID_GET_CHAR	vmm/sbi_emu.c	/^#define SBI_EXT_ID_GET_CHAR /;"	d	file:
SBI_EXT_ID_PUT_CHAR	vmm/sbi_emu.c	/^#define SBI_EXT_ID_PUT_CHAR /;"	d	file:
SBI_EXT_ID_REMOTE_FENCE_I	vmm/sbi_emu.c	/^#define SBI_EXT_ID_REMOTE_FENCE_I /;"	d	file:
SBI_EXT_ID_REMOTE_SFENCE_VMA	vmm/sbi_emu.c	/^#define SBI_EXT_ID_REMOTE_SFENCE_VMA /;"	d	file:
SBI_EXT_ID_REMOTE_SFENCE_VMA_ASID	vmm/sbi_emu.c	/^#define SBI_EXT_ID_REMOTE_SFENCE_VMA_ASID /;"	d	file:
SBI_EXT_ID_SBI_TIMER	vmm/sbi_emu.c	/^#define SBI_EXT_ID_SBI_TIMER /;"	d	file:
SBI_EXT_ID_SEND_IPI	vmm/sbi_emu.c	/^#define SBI_EXT_ID_SEND_IPI /;"	d	file:
SBI_EXT_ID_SHUTDOWN	vmm/sbi_emu.c	/^#define SBI_EXT_ID_SHUTDOWN /;"	d	file:
SBI_FUNC_ID_GET_SPEC	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_GET_SPEC /;"	d	file:
SBI_FUNC_ID_IMPL_ID	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_IMPL_ID /;"	d	file:
SBI_FUNC_ID_IMPL_VERSION	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_IMPL_VERSION /;"	d	file:
SBI_FUNC_ID_MARCHID	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_MARCHID /;"	d	file:
SBI_FUNC_ID_MIMPID	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_MIMPID /;"	d	file:
SBI_FUNC_ID_MVENDORID	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_MVENDORID /;"	d	file:
SBI_FUNC_ID_PROBE_EXT	vmm/sbi_emu.c	/^#define SBI_FUNC_ID_PROBE_EXT /;"	d	file:
SBI_IMPLEMENTATION_ID	vmm/sbi_emu.c	/^#define SBI_IMPLEMENTATION_ID /;"	d	file:
SBI_SUCCESS	vmm/sbi_emu.h	/^#define SBI_SUCCESS /;"	d
SCRATCHPAD_REGISTER_READ	include/uart_regs.h	/^#define SCRATCHPAD_REGISTER_READ /;"	d
SCRATCHPAD_REGISTER_WRITE	include/uart_regs.h	/^#define SCRATCHPAD_REGISTER_WRITE /;"	d
SIFIVE_IRQ_NUMBER_MAX	include/plic_defs.h	/^#define SIFIVE_IRQ_NUMBER_MAX /;"	d
SIFIVE_IRQ_NUMBER_PCIE_IRQ	include/plic_defs.h	/^#define SIFIVE_IRQ_NUMBER_PCIE_IRQ /;"	d
SIFIVE_IRQ_NUMBER_UART0	include/plic_defs.h	/^#define SIFIVE_IRQ_NUMBER_UART0 /;"	d
SIFIVE_IRQ_NUMBER_VIRTIO_COUNT	include/plic_defs.h	/^#define SIFIVE_IRQ_NUMBER_VIRTIO_COUNT /;"	d
SIFIVE_IRQ_NUMBER_VIRTIO_IRQ	include/plic_defs.h	/^#define SIFIVE_IRQ_NUMBER_VIRTIO_IRQ /;"	d
SIFIVE_NUM_OF_INTERRUPT	include/plic_defs.h	/^#define SIFIVE_NUM_OF_INTERRUPT /;"	d
SIFIVE_PLIC_M_CLAIM_COMPLETE	include/plic_defs.h	/^#define SIFIVE_PLIC_M_CLAIM_COMPLETE /;"	d
SIFIVE_PLIC_M_ENABLE_BASE	include/plic_defs.h	/^#define SIFIVE_PLIC_M_ENABLE_BASE /;"	d
SIFIVE_PLIC_PENDING_BASE	include/plic_defs.h	/^#define SIFIVE_PLIC_PENDING_BASE /;"	d
SIFIVE_PLIC_PRIORITY_BASE	include/plic_defs.h	/^#define SIFIVE_PLIC_PRIORITY_BASE /;"	d
SIFIVE_PLIC_PRIORITY_THRESHOLD	include/plic_defs.h	/^#define SIFIVE_PLIC_PRIORITY_THRESHOLD /;"	d
SIFIVE_PLIC_S_CLAIM_COMPLETE	include/plic_defs.h	/^#define SIFIVE_PLIC_S_CLAIM_COMPLETE /;"	d
SIFIVE_PLIC_S_ENABLE_BASE	include/plic_defs.h	/^#define SIFIVE_PLIC_S_ENABLE_BASE /;"	d
SSTATUS_FS	include/register.h	/^#define SSTATUS_FS /;"	d
SSTATUS_FS	register.h	/^#define SSTATUS_FS /;"	d
SSTATUS_MXR	include/register.h	/^#define SSTATUS_MXR /;"	d
SSTATUS_MXR	register.h	/^#define SSTATUS_MXR /;"	d
SSTATUS_SIE	include/register.h	/^#define SSTATUS_SIE /;"	d
SSTATUS_SIE	register.h	/^#define SSTATUS_SIE /;"	d
SSTATUS_SPIE	include/register.h	/^#define SSTATUS_SPIE /;"	d
SSTATUS_SPIE	register.h	/^#define SSTATUS_SPIE /;"	d
SSTATUS_SPP	include/register.h	/^#define SSTATUS_SPP /;"	d
SSTATUS_SPP	register.h	/^#define SSTATUS_SPP /;"	d
SSTATUS_SUM	include/register.h	/^#define SSTATUS_SUM /;"	d
SSTATUS_SUM	register.h	/^#define SSTATUS_SUM /;"	d
SSTATUS_UIE	include/register.h	/^#define SSTATUS_UIE /;"	d
SSTATUS_UIE	register.h	/^#define SSTATUS_UIE /;"	d
SSTATUS_UPIE	include/register.h	/^#define SSTATUS_UPIE /;"	d
SSTATUS_UPIE	register.h	/^#define SSTATUS_UPIE /;"	d
SSTATUS_UXR	include/register.h	/^#define SSTATUS_UXR /;"	d
SSTATUS_UXR	register.h	/^#define SSTATUS_UXR /;"	d
SSTATUS_XS	include/register.h	/^#define SSTATUS_XS /;"	d
SSTATUS_XS	register.h	/^#define SSTATUS_XS /;"	d
STATUS	virtio_mmio.c	/^#define STATUS /;"	d	file:
STATUS_ACK	virtio_mmio.c	/^#define STATUS_ACK /;"	d	file:
STATUS_DRIVER	virtio_mmio.c	/^#define STATUS_DRIVER /;"	d	file:
STATUS_DRIVER_OK	virtio_mmio.c	/^#define STATUS_DRIVER_OK /;"	d	file:
STATUS_FEATURES_OK	virtio_mmio.c	/^#define STATUS_FEATURES_OK /;"	d	file:
STATUS_RESET	virtio_mmio.c	/^#define STATUS_RESET /;"	d	file:
TF_A0_OFFSET	include/trap_handler.h	/^#define TF_A0_OFFSET /;"	d
TF_A1_OFFSET	include/trap_handler.h	/^#define TF_A1_OFFSET /;"	d
TF_A2_OFFSET	include/trap_handler.h	/^#define TF_A2_OFFSET /;"	d
TF_A3_OFFSET	include/trap_handler.h	/^#define TF_A3_OFFSET /;"	d
TF_A4_OFFSET	include/trap_handler.h	/^#define TF_A4_OFFSET /;"	d
TF_A5_OFFSET	include/trap_handler.h	/^#define TF_A5_OFFSET /;"	d
TF_A6_OFFSET	include/trap_handler.h	/^#define TF_A6_OFFSET /;"	d
TF_A7_OFFSET	include/trap_handler.h	/^#define TF_A7_OFFSET /;"	d
TF_GP_OFFSET	include/trap_handler.h	/^#define TF_GP_OFFSET /;"	d
TF_HSTATUS	include/trap_handler.h	/^#define TF_HSTATUS /;"	d
TF_KERNEL_SP_OFFSET	include/trap_handler.h	/^#define TF_KERNEL_SP_OFFSET /;"	d
TF_RA_OFFSET	include/trap_handler.h	/^#define TF_RA_OFFSET /;"	d
TF_S0_OFFSET	include/trap_handler.h	/^#define TF_S0_OFFSET /;"	d
TF_S10_OFFSET	include/trap_handler.h	/^#define TF_S10_OFFSET /;"	d
TF_S11_OFFSET	include/trap_handler.h	/^#define TF_S11_OFFSET /;"	d
TF_S1_OFFSET	include/trap_handler.h	/^#define TF_S1_OFFSET /;"	d
TF_S2_OFFSET	include/trap_handler.h	/^#define TF_S2_OFFSET /;"	d
TF_S3_OFFSET	include/trap_handler.h	/^#define TF_S3_OFFSET /;"	d
TF_S4_OFFSET	include/trap_handler.h	/^#define TF_S4_OFFSET /;"	d
TF_S5_OFFSET	include/trap_handler.h	/^#define TF_S5_OFFSET /;"	d
TF_S6_OFFSET	include/trap_handler.h	/^#define TF_S6_OFFSET /;"	d
TF_S7_OFFSET	include/trap_handler.h	/^#define TF_S7_OFFSET /;"	d
TF_S8_OFFSET	include/trap_handler.h	/^#define TF_S8_OFFSET /;"	d
TF_S9_OFFSET	include/trap_handler.h	/^#define TF_S9_OFFSET /;"	d
TF_SCAUSE_OFFSET	include/trap_handler.h	/^#define TF_SCAUSE_OFFSET /;"	d
TF_SEPC_OFFSET	include/trap_handler.h	/^#define TF_SEPC_OFFSET /;"	d
TF_SIZE	include/trap_handler.h	/^#define TF_SIZE /;"	d
TF_SP_OFFSET	include/trap_handler.h	/^#define TF_SP_OFFSET /;"	d
TF_SSCRATCH_OFFSET	include/trap_handler.h	/^#define TF_SSCRATCH_OFFSET /;"	d
TF_SSTATUS_OFFSET	include/trap_handler.h	/^#define TF_SSTATUS_OFFSET /;"	d
TF_STVAL_OFFSET	include/trap_handler.h	/^#define TF_STVAL_OFFSET /;"	d
TF_T0_OFFSET	include/trap_handler.h	/^#define TF_T0_OFFSET /;"	d
TF_T1_OFFSET	include/trap_handler.h	/^#define TF_T1_OFFSET /;"	d
TF_T2_OFFSET	include/trap_handler.h	/^#define TF_T2_OFFSET /;"	d
TF_T3_OFFSET	include/trap_handler.h	/^#define TF_T3_OFFSET /;"	d
TF_T4_OFFSET	include/trap_handler.h	/^#define TF_T4_OFFSET /;"	d
TF_T5_OFFSET	include/trap_handler.h	/^#define TF_T5_OFFSET /;"	d
TF_T6_OFFSET	include/trap_handler.h	/^#define TF_T6_OFFSET /;"	d
TF_TP_OFFSET	include/trap_handler.h	/^#define TF_TP_OFFSET /;"	d
TOOL	Makefile	/^TOOL		:= riscv64-unknown-elf-$/;"	m
TO_STR	include/string.h	/^#define TO_STR(/;"	d
TP_KERNEL_SP_OFFSET	include/trap_handler.h	/^#define TP_KERNEL_SP_OFFSET /;"	d
TP_USER_SP_OFFSET	include/trap_handler.h	/^#define TP_USER_SP_OFFSET /;"	d
TRANSMIT_HOLDING_REGISTER	include/uart_regs.h	/^#define TRANSMIT_HOLDING_REGISTER /;"	d
VCPU_OFFSET_GUEST_A0	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A0 /;"	d
VCPU_OFFSET_GUEST_A1	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A1 /;"	d
VCPU_OFFSET_GUEST_A2	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A2 /;"	d
VCPU_OFFSET_GUEST_A3	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A3 /;"	d
VCPU_OFFSET_GUEST_A4	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A4 /;"	d
VCPU_OFFSET_GUEST_A5	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A5 /;"	d
VCPU_OFFSET_GUEST_A6	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A6 /;"	d
VCPU_OFFSET_GUEST_A7	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_A7 /;"	d
VCPU_OFFSET_GUEST_GP	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_GP /;"	d
VCPU_OFFSET_GUEST_HSTATUS	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_HSTATUS /;"	d
VCPU_OFFSET_GUEST_RA	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_RA /;"	d
VCPU_OFFSET_GUEST_S0	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S0 /;"	d
VCPU_OFFSET_GUEST_S1	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S1 /;"	d
VCPU_OFFSET_GUEST_S10	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S10 /;"	d
VCPU_OFFSET_GUEST_S11	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S11 /;"	d
VCPU_OFFSET_GUEST_S2	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S2 /;"	d
VCPU_OFFSET_GUEST_S3	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S3 /;"	d
VCPU_OFFSET_GUEST_S4	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S4 /;"	d
VCPU_OFFSET_GUEST_S5	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S5 /;"	d
VCPU_OFFSET_GUEST_S6	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S6 /;"	d
VCPU_OFFSET_GUEST_S7	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S7 /;"	d
VCPU_OFFSET_GUEST_S8	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S8 /;"	d
VCPU_OFFSET_GUEST_S9	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_S9 /;"	d
VCPU_OFFSET_GUEST_SEPC	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_SEPC /;"	d
VCPU_OFFSET_GUEST_SP	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_SP /;"	d
VCPU_OFFSET_GUEST_SSTATUS	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_SSTATUS /;"	d
VCPU_OFFSET_GUEST_T0	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T0 /;"	d
VCPU_OFFSET_GUEST_T1	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T1 /;"	d
VCPU_OFFSET_GUEST_T2	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T2 /;"	d
VCPU_OFFSET_GUEST_T3	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T3 /;"	d
VCPU_OFFSET_GUEST_T4	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T4 /;"	d
VCPU_OFFSET_GUEST_T5	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T5 /;"	d
VCPU_OFFSET_GUEST_T6	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_T6 /;"	d
VCPU_OFFSET_GUEST_TP	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_TP /;"	d
VCPU_OFFSET_GUEST_ZERO	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_GUEST_ZERO /;"	d
VCPU_OFFSET_HOST_A1	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A1 /;"	d
VCPU_OFFSET_HOST_A2	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A2 /;"	d
VCPU_OFFSET_HOST_A3	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A3 /;"	d
VCPU_OFFSET_HOST_A4	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A4 /;"	d
VCPU_OFFSET_HOST_A5	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A5 /;"	d
VCPU_OFFSET_HOST_A6	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A6 /;"	d
VCPU_OFFSET_HOST_A7	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_A7 /;"	d
VCPU_OFFSET_HOST_GP	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_GP /;"	d
VCPU_OFFSET_HOST_HSTATUS	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_HSTATUS /;"	d
VCPU_OFFSET_HOST_RA	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_RA /;"	d
VCPU_OFFSET_HOST_S0	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S0 /;"	d
VCPU_OFFSET_HOST_S1	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S1 /;"	d
VCPU_OFFSET_HOST_S10	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S10 /;"	d
VCPU_OFFSET_HOST_S11	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S11 /;"	d
VCPU_OFFSET_HOST_S2	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S2 /;"	d
VCPU_OFFSET_HOST_S3	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S3 /;"	d
VCPU_OFFSET_HOST_S4	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S4 /;"	d
VCPU_OFFSET_HOST_S5	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S5 /;"	d
VCPU_OFFSET_HOST_S6	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S6 /;"	d
VCPU_OFFSET_HOST_S7	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S7 /;"	d
VCPU_OFFSET_HOST_S8	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S8 /;"	d
VCPU_OFFSET_HOST_S9	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_S9 /;"	d
VCPU_OFFSET_HOST_SP	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_SP /;"	d
VCPU_OFFSET_HOST_SSCRATCH	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_SSCRATCH /;"	d
VCPU_OFFSET_HOST_SSTATUS	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_SSTATUS /;"	d
VCPU_OFFSET_HOST_STVEC	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_STVEC /;"	d
VCPU_OFFSET_HOST_T0	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T0 /;"	d
VCPU_OFFSET_HOST_T1	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T1 /;"	d
VCPU_OFFSET_HOST_T2	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T2 /;"	d
VCPU_OFFSET_HOST_T3	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T3 /;"	d
VCPU_OFFSET_HOST_T4	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T4 /;"	d
VCPU_OFFSET_HOST_T5	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T5 /;"	d
VCPU_OFFSET_HOST_T6	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_T6 /;"	d
VCPU_OFFSET_HOST_TP	vmm/vcpu_offsets.h	/^#define VCPU_OFFSET_HOST_TP /;"	d
VCPU_STATE_BLOCKED	vmm/vcpu.h	/^    VCPU_STATE_BLOCKED, \/\/ stoped(exited) due to WFI instruction.$/;"	e	enum:vcpu_state
VCPU_STATE_READY	vmm/vcpu.h	/^    VCPU_STATE_READY,$/;"	e	enum:vcpu_state
VCPU_STATE_RUNNING	vmm/vcpu.h	/^    VCPU_STATE_RUNNING,$/;"	e	enum:vcpu_state
VCPU_STATE_TERMINATED	vmm/vcpu.h	/^    VCPU_STATE_TERMINATED,$/;"	e	enum:vcpu_state
VENDOR_ID	virtio_mmio.c	/^#define VENDOR_ID /;"	d	file:
VERSION	virtio_mmio.c	/^#define VERSION /;"	d	file:
VIRTIO_BLK_F_BARRIER	virtio_mmio.c	/^#define VIRTIO_BLK_F_BARRIER /;"	d	file:
VIRTIO_BLK_F_BLK_SIZE	virtio_mmio.c	/^#define VIRTIO_BLK_F_BLK_SIZE /;"	d	file:
VIRTIO_BLK_F_CONFIG_WCE	virtio_mmio.c	/^#define VIRTIO_BLK_F_CONFIG_WCE /;"	d	file:
VIRTIO_BLK_F_FLUSH	virtio_mmio.c	/^#define VIRTIO_BLK_F_FLUSH /;"	d	file:
VIRTIO_BLK_F_GEOMETRY	virtio_mmio.c	/^#define VIRTIO_BLK_F_GEOMETRY /;"	d	file:
VIRTIO_BLK_F_RO	virtio_mmio.c	/^#define VIRTIO_BLK_F_RO /;"	d	file:
VIRTIO_BLK_F_SCSI	virtio_mmio.c	/^#define VIRTIO_BLK_F_SCSI /;"	d	file:
VIRTIO_BLK_F_SEG_MAX	virtio_mmio.c	/^#define VIRTIO_BLK_F_SEG_MAX /;"	d	file:
VIRTIO_BLK_F_SIZE_MAX	virtio_mmio.c	/^#define VIRTIO_BLK_F_SIZE_MAX /;"	d	file:
VIRTIO_BLK_F_TOPOLOGY	virtio_mmio.c	/^#define VIRTIO_BLK_F_TOPOLOGY /;"	d	file:
VIRTIO_BLK_T_FLUSH	virtio_mmio.c	/^#define VIRTIO_BLK_T_FLUSH /;"	d	file:
VIRTIO_BLK_T_IN	virtio_mmio.c	/^#define VIRTIO_BLK_T_IN /;"	d	file:
VIRTIO_BLK_T_OUT	virtio_mmio.c	/^#define VIRTIO_BLK_T_OUT /;"	d	file:
VIRTIO_QUEUE_SIZE	virtio_mmio.c	/^#define VIRTIO_QUEUE_SIZE /;"	d	file:
VIRT_CLINT	include/memory_map.h	/^    VIRT_CLINT,$/;"	e	enum:__anone1f0cde40103
VIRT_DEBUG	include/memory_map.h	/^    VIRT_DEBUG,$/;"	e	enum:__anone1f0cde40103
VIRT_DRAM	include/memory_map.h	/^    VIRT_DRAM,$/;"	e	enum:__anone1f0cde40103
VIRT_MEM_MAP_END	include/memory_map.h	/^    VIRT_MEM_MAP_END,$/;"	e	enum:__anone1f0cde40103
VIRT_MROM	include/memory_map.h	/^    VIRT_MROM,$/;"	e	enum:__anone1f0cde40103
VIRT_PCIE_ECAM	include/memory_map.h	/^    VIRT_PCIE_ECAM,$/;"	e	enum:__anone1f0cde40103
VIRT_PCIE_MMIO	include/memory_map.h	/^    VIRT_PCIE_MMIO,$/;"	e	enum:__anone1f0cde40103
VIRT_PCIE_PIO	include/memory_map.h	/^    VIRT_PCIE_PIO,$/;"	e	enum:__anone1f0cde40103
VIRT_PLIC	include/memory_map.h	/^    VIRT_PLIC,$/;"	e	enum:__anone1f0cde40103
VIRT_TEST	include/memory_map.h	/^    VIRT_TEST,$/;"	e	enum:__anone1f0cde40103
VIRT_UART0	include/memory_map.h	/^    VIRT_UART0,$/;"	e	enum:__anone1f0cde40103
VIRT_VIRTIO	include/memory_map.h	/^    VIRT_VIRTIO,$/;"	e	enum:__anone1f0cde40103
VMM_OBJS	Makefile	/^VMM_OBJS	:= vmm\/vcpu.o vmm\/vmm.o vmm\/enter.o vmm\/mmu.o vmm\/hfence.o vmm\/test_guest.o vmm\//;"	m
VRING_DESC_F_NEXT	virtio_mmio.c	/^#define VRING_DESC_F_NEXT /;"	d	file:
VRING_DESC_F_WRITE	virtio_mmio.c	/^#define VRING_DESC_F_WRITE /;"	d	file:
_TO_STR	include/string.h	/^#define _TO_STR(/;"	d
__anon5d1ae6370108	include/csr_type.h	/^    struct {$/;"	s	union:scause
__anon77a0c4e9010a	vmm/mmu.h	/^    union {$/;"	u	struct:hgatp
__anon77a0c4e90208	vmm/mmu.h	/^        {$/;"	s	union:hgatp::__anon77a0c4e9010a
__anon800143b80108	vmm/vcpu.h	/^    {$/;"	s	struct:virtual_cpu
__anon800143b80208	vmm/vcpu.h	/^    {$/;"	s	struct:virtual_cpu
__anon800143b80308	vmm/vcpu.h	/^    {$/;"	s	struct:virtual_cpu
__anon800143b80408	vmm/vcpu.h	/^    struct {$/;"	s	struct:virtual_cpu
__anond7b35bcd010a	include/virtual_memory.h	/^    union {$/;"	u	struct:satp
__anond7b35bcd0208	include/virtual_memory.h	/^        {$/;"	s	union:satp::__anond7b35bcd010a
__anond7b35bcd030a	include/virtual_memory.h	/^    union {$/;"	u	struct:sv39_page_table_entry
__anond7b35bcd0408	include/virtual_memory.h	/^        {$/;"	s	union:sv39_page_table_entry::__anond7b35bcd030a
__anond7b35bcd0508	include/virtual_memory.h	/^            {$/;"	s	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408
__anone1f0cde40103	include/memory_map.h	/^{$/;"	g
_heap_end	script.ld	/^    _heap_end = 0x80000000 + 0x800000; \/* 8MiB *\/$/;"	s
_heap_start	script.ld	/^    _heap_start = .;$/;"	s
_kernel_stack	script.ld	/^    _kernel_stack = .;$/;"	s
_ram_end	script.ld	/^    _ram_end = .;$/;"	s
_save_trap_frame	trap_handler.S	/^_save_trap_frame:$/;"	l
_shutdown	entry.S	/^_shutdown:$/;"	l
_start	entry.S	/^_start:$/;"	l
_start	script.ld	/^    _start = .;$/;"	s
_trap_from_kernel	trap_handler.S	/^_trap_from_kernel:$/;"	l
_user_sample	user_sample.S	/^_user_sample:$/;"	l
a0	include/trap.h	/^    uint64_t a0;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a0	vmm/vcpu.h	/^        uint64_t a0;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a1	include/trap.h	/^    uint64_t a1;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a1	vmm/vcpu.h	/^        uint64_t a1;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a1	vmm/vcpu.h	/^        uint64_t a1;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
a2	include/trap.h	/^    uint64_t a2;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a2	vmm/vcpu.h	/^        uint64_t a2;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a2	vmm/vcpu.h	/^        uint64_t a2;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
a3	include/trap.h	/^    uint64_t a3;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a3	vmm/vcpu.h	/^        uint64_t a3;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a3	vmm/vcpu.h	/^        uint64_t a3;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
a4	include/trap.h	/^    uint64_t a4;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a4	vmm/vcpu.h	/^        uint64_t a4;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a4	vmm/vcpu.h	/^        uint64_t a4;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
a5	include/trap.h	/^    uint64_t a5;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a5	vmm/vcpu.h	/^        uint64_t a5;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a5	vmm/vcpu.h	/^        uint64_t a5;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
a6	include/trap.h	/^    uint64_t a6;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a6	vmm/vcpu.h	/^        uint64_t a6;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a6	vmm/vcpu.h	/^        uint64_t a6;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
a7	include/trap.h	/^    uint64_t a7;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
a7	vmm/vcpu.h	/^        uint64_t a7;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
a7	vmm/vcpu.h	/^        uint64_t a7;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
access_control	include/virtual_memory.h	/^            } __attribute__((packed)) access_control;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408	typeref:struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508
accessed	include/virtual_memory.h	/^                uint8_t accessed : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
addres	include/fdt_core.h	/^    uint64_t addres;$/;"	m	struct:memory_reserved_entry	typeref:typename:uint64_t
address	virtio_mmio.c	/^        uint64_t address; \/\/ physical address$/;"	m	struct:virtqueue::virtq_desc	typeref:typename:uint64_t	file:
all	Makefile	/^all: build$/;"	t
alloc_plic_emulator	vmm/plic_emu.c	/^plic_emulator_t *alloc_plic_emulator(void)$/;"	f	typeref:typename:plic_emulator_t *
alloc_uart_emulator	vmm/uart_emu.c	/^uart_emulator_t *alloc_uart_emulator(void)$/;"	f	typeref:typename:uart_emulator_t *
alloc_vcpu	vmm/vcpu.c	/^virtual_cpu_t *alloc_vcpu(void)$/;"	f	typeref:typename:virtual_cpu_t *
append_property	fdt.c	/^static void append_property(device_tree_t *dt, property_t *prop)$/;"	f	typeref:typename:void	file:
append_subnode	fdt.c	/^static void append_subnode(device_tree_t *dt, device_tree_t *subnode)$/;"	f	typeref:typename:void	file:
asid	include/virtual_memory.h	/^            uint16_t asid : 16; \/\/ address space identifire$/;"	m	struct:satp::__anond7b35bcd010a::__anond7b35bcd0208	typeref:typename:uint16_t:16
avail	virtio_mmio.c	/^    } avail;$/;"	m	struct:virtqueue	typeref:struct:virtqueue::virtq_avail	file:
avail_event	virtio_mmio.c	/^    uint16_t avail_event;$/;"	m	struct:virtq_used	typeref:typename:uint16_t	file:
base	include/memory_map.h	/^    uintptr_t base;$/;"	m	struct:memory_map_entry	typeref:typename:uintptr_t
base	vmm/vcpu.h	/^        uint32_t* base;$/;"	m	struct:virtual_cpu::__anon800143b80408	typeref:typename:uint32_t *
big2little_32	endian.c	/^uint32_t big2little_32(uint32_t value)$/;"	f	typeref:typename:uint32_t
boot_cpuid_phys	include/fdt_core.h	/^    uint32_t boot_cpuid_phys;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
boot_thread	thread.c	/^static thread_struct_t boot_thread;$/;"	v	typeref:typename:thread_struct_t	file:
breakpoint	include/exception.h	/^    breakpoint = 3,$/;"	e	enum:exception_code
bsp_ti	trap.c	/^static thread_info_t bsp_ti;$/;"	v	typeref:typename:thread_info_t	file:
build	Makefile	/^build: $(IMAGE) $(DISK_IMG)$/;"	t
c_trap_handler	trap.c	/^void c_trap_handler(trap_frame_t *trap_frame)$/;"	f	typeref:typename:void
check_name	vmm/fdt_edit.c	/^static bool check_name(uint32_t *base, size_t *index, const char *name)$/;"	f	typeref:typename:bool	file:
check_string	vmm/fdt_edit.c	/^static bool check_string(uint32_t *base, size_t offset, const char *name)$/;"	f	typeref:typename:bool	file:
clean	Makefile	/^clean:$/;"	t
code	include/csr_type.h	/^        uint64_t code : 63;$/;"	m	struct:scause::__anon5d1ae6370108	typeref:typename:uint64_t:63
conceal_h_extension	vmm/fdt_edit.c	/^bool conceal_h_extension(fdt_header_t *header, size_t hart_id)$/;"	f	typeref:typename:bool
context	thread.h	/^    context_t context;$/;"	m	struct:thread_struct	typeref:typename:context_t
context	thread.h	/^typedef struct context$/;"	s
context_switch	context_switch.S	/^context_switch:$/;"	l
context_t	thread.h	/^} context_t;$/;"	t	typeref:struct:context
convert_exception_code_to_string	exception.c	/^char *convert_exception_code_to_string(enum exception_code code)$/;"	f	typeref:typename:char *
convert_interrupt_code_to_string	exception.c	/^char *convert_interrupt_code_to_string(enum interrupt_code code)$/;"	f	typeref:typename:char *
convert_into_page_base	virtual_memory.c	/^uintptr_t convert_into_page_base(const page_table_entry_t entry)$/;"	f	typeref:typename:uintptr_t
convert_into_page_table	virtual_memory.c	/^page_table_t convert_into_page_table(const page_table_entry_t entry)$/;"	f	typeref:typename:page_table_t
convert_into_table_entry	virtual_memory.c	/^page_table_entry_t convert_into_table_entry(const page_table_t table)$/;"	f	typeref:typename:page_table_entry_t
count_kthread	main.c	/^static int count_kthread = 0;$/;"	v	typeref:typename:int	file:
count_main	main.c	/^static int count_main = 0;$/;"	v	typeref:typename:int	file:
count_up_tick	timer.c	/^void count_up_tick(void)$/;"	f	typeref:typename:void
cpu_id	include/trap.h	/^    uint64_t cpu_id;$/;"	m	struct:thread_info	typeref:typename:uint64_t
create_kernel_thread_test	thread.c	/^thread_struct_t *create_kernel_thread_test(uint64_t entry_address)$/;"	f	typeref:typename:thread_struct_t *
create_user_process	thread.c	/^void create_user_process(uint64_t entry_address)$/;"	f	typeref:typename:void
csr_read_scause	csr_func.c	/^uint64_t csr_read_scause(void)$/;"	f	typeref:typename:uint64_t
csr_read_sepc	csr_func.c	/^uint64_t csr_read_sepc(void)$/;"	f	typeref:typename:uint64_t
csr_read_stval	csr_func.c	/^uint64_t csr_read_stval(void)$/;"	f	typeref:typename:uint64_t
csr_read_vsatp	csr_func.c	/^uint64_t csr_read_vsatp(void)$/;"	f	typeref:typename:uint64_t
csr_read_vscause	csr_func.c	/^uint64_t csr_read_vscause(void)$/;"	f	typeref:typename:uint64_t
csr_read_vsepc	csr_func.c	/^uint64_t csr_read_vsepc(void)$/;"	f	typeref:typename:uint64_t
csr_read_vsie	csr_func.c	/^uint64_t csr_read_vsie(void)$/;"	f	typeref:typename:uint64_t
csr_read_vsip	csr_func.c	/^uint64_t csr_read_vsip(void)$/;"	f	typeref:typename:uint64_t
csr_read_vsscratch	csr_func.c	/^uint64_t csr_read_vsscratch(void)$/;"	f	typeref:typename:uint64_t
csr_read_vsstatus	csr_func.c	/^uint64_t csr_read_vsstatus(void)$/;"	f	typeref:typename:uint64_t
csr_read_vstval	csr_func.c	/^uint64_t csr_read_vstval(void)$/;"	f	typeref:typename:uint64_t
csr_read_vstvec	csr_func.c	/^uint64_t csr_read_vstvec(void)$/;"	f	typeref:typename:uint64_t
csr_scause_t	include/csr_type.h	/^} __attribute__((packed)) csr_scause_t;$/;"	t	typeref:union:scause
csr_write_hedeleg	csr_func.c	/^void csr_write_hedeleg(uint64_t value)$/;"	f	typeref:typename:void
csr_write_hgatp	csr_func.c	/^void csr_write_hgatp(uint64_t value)$/;"	f	typeref:typename:void
csr_write_hideleg	csr_func.c	/^void csr_write_hideleg(uint64_t value)$/;"	f	typeref:typename:void
csr_write_satp	csr_func.c	/^void csr_write_satp(uint64_t satp)$/;"	f	typeref:typename:void
csr_write_sepc	csr_func.c	/^void csr_write_sepc(uint64_t sepc)$/;"	f	typeref:typename:void
csr_write_sie	csr_func.c	/^void csr_write_sie(uint64_t value)$/;"	f	typeref:typename:void
csr_write_sscratch	csr_func.c	/^void csr_write_sscratch(uint64_t value)$/;"	f	typeref:typename:void
csr_write_stvec	csr_func.c	/^void csr_write_stvec(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vsatp	csr_func.c	/^void csr_write_vsatp(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vscause	csr_func.c	/^void csr_write_vscause(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vsepc	csr_func.c	/^void csr_write_vsepc(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vsie	csr_func.c	/^void csr_write_vsie(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vsip	csr_func.c	/^void csr_write_vsip(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vsscratch	csr_func.c	/^void csr_write_vsscratch(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vsstatus	csr_func.c	/^void csr_write_vsstatus(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vstval	csr_func.c	/^void csr_write_vstval(uint64_t value)$/;"	f	typeref:typename:void
csr_write_vstvec	csr_func.c	/^void csr_write_vstvec(uint64_t value)$/;"	f	typeref:typename:void
debug	Makefile	/^debug: $(IMAGE)$/;"	t
desc	virtio_mmio.c	/^    } desc[VIRTIO_QUEUE_SIZE];$/;"	m	struct:virtqueue	typeref:struct:virtqueue::virtq_desc[]	file:
desc_avail	virtio_mmio.c	/^    virtqueue_pre_t *desc_avail;$/;"	m	struct:virtio_block	typeref:typename:virtqueue_pre_t *	file:
device_tree	fdt.c	/^static device_tree_t *device_tree;$/;"	v	typeref:typename:device_tree_t *	file:
device_tree_t	include/fdt_core.h	/^} device_tree_t;$/;"	t	typeref:struct:devicetree
device_type	virtio_mmio.c	/^enum device_type$/;"	g	file:
devicetree	include/fdt_core.h	/^typedef struct devicetree$/;"	s
dirty	include/virtual_memory.h	/^                uint8_t dirty : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
disable_interrupt	trap.c	/^void disable_interrupt(void)$/;"	f	typeref:typename:void
do_system_call	system_call.c	/^uint64_t do_system_call(trap_frame_t *trap_frame) { return 0; }$/;"	f	typeref:typename:uint64_t
dram_base	memory_manager.c	/^uint64_t dram_base, dram_end;$/;"	v	typeref:typename:uint64_t
dram_end	memory_manager.c	/^uint64_t dram_base, dram_end;$/;"	v	typeref:typename:uint64_t
dump	Makefile	/^dump: $(IMAGE)$/;"	t
emulate_sbi_call	vmm/sbi_emu.c	/^bool emulate_sbi_call(virtual_cpu_t* vcpu)$/;"	f	typeref:typename:bool
enable_interrupt	trap.c	/^void enable_interrupt(void)$/;"	f	typeref:typename:void
enable_registers	vmm/plic_emu.h	/^    uint32_t enable_registers[0x40];$/;"	m	struct:plic_emulator	typeref:typename:uint32_t[0x40]
environment_call_from_hs	include/exception.h	/^    environment_call_from_hs = 9,$/;"	e	enum:exception_code
environment_call_from_m	include/exception.h	/^    environment_call_from_m = 11,$/;"	e	enum:exception_code
environment_call_from_u	include/exception.h	/^    environment_call_from_u = 8,$/;"	e	enum:exception_code
environment_call_from_vs	include/exception.h	/^    environment_call_from_vs = 10,$/;"	e	enum:exception_code
exception_code	include/exception.h	/^enum exception_code$/;"	g
executable	include/virtual_memory.h	/^                uint8_t executable : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
extract_vpn	virtual_memory.c	/^static inline uint16_t extract_vpn(const virtual_address_t v_address,$/;"	f	typeref:typename:uint16_t	file:
extract_vpn_sv39_x4	vmm/mmu.c	/^static uint16_t extract_vpn_sv39_x4(const virtual_address_t v_address,$/;"	f	typeref:typename:uint16_t	file:
fcr	vmm/uart_emu.h	/^    uint8_t fcr;$/;"	m	struct:uart_emulator	typeref:typename:uint8_t
fdt	vmm/vcpu.h	/^    } fdt;$/;"	m	struct:virtual_cpu	typeref:struct:virtual_cpu::__anon800143b80408
fdt_base_address	fdt.c	/^static fdt_header_t *fdt_base_address = NULL;$/;"	v	typeref:typename:fdt_header_t *	file:
fdt_header	include/fdt_core.h	/^typedef struct fdt_header$/;"	s
fdt_header_t	include/fdt_core.h	/^} fdt_header_t;$/;"	t	typeref:struct:fdt_header
fdt_reserve_entry_t	include/fdt_core.h	/^} fdt_reserve_entry_t;$/;"	t	typeref:struct:memory_reserved_entry
fdt_struct_entry_t	include/fdt_core.h	/^typedef uint32_t fdt_struct_entry_t;$/;"	t	typeref:typename:uint32_t
fields	include/virtual_memory.h	/^        } __attribute__((packed)) fields;$/;"	m	union:sv39_page_table_entry::__anond7b35bcd030a	typeref:struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408
flags	virtio_mmio.c	/^        uint16_t flags;$/;"	m	struct:virtqueue::virtq_avail	typeref:typename:uint16_t	file:
flags	virtio_mmio.c	/^        uint16_t flags;$/;"	m	struct:virtqueue::virtq_desc	typeref:typename:uint16_t	file:
flags	virtio_mmio.c	/^    uint16_t flags;$/;"	m	struct:virtq_used	typeref:typename:uint16_t	file:
get_base_register	virtio_mmio.c	/^static bool get_base_register(uint64_t* base)$/;"	f	typeref:typename:bool	file:
get_cpu_id	smp.c	/^uint64_t get_cpu_id(void)$/;"	f	typeref:typename:uint64_t
get_fdt_base	fdt.c	/^fdt_header_t *get_fdt_base(void) { return fdt_base_address; }$/;"	f	typeref:typename:fdt_header_t *
get_kernel_page_table	virtual_memory.c	/^page_table_t get_kernel_page_table(void) { return kernel_root_page_table; }$/;"	f	typeref:typename:page_table_t
get_next_name	fdt.c	/^char *get_next_name(int *index)$/;"	f	typeref:typename:char *
get_next_thread_id	thread.c	/^static size_t get_next_thread_id(void) { return thread_id++; }$/;"	f	typeref:typename:size_t	file:
get_property	fdt.c	/^property_t *get_property(const char *node_path, const char *prop_name)$/;"	f	typeref:typename:property_t *
get_register_address	vmm/inst_emu.c	/^static uint64_t *get_register_address(virtual_cpu_t *vcpu, size_t offset)$/;"	f	typeref:typename:uint64_t *	file:
get_string	fdt.c	/^char *get_string(int offset)$/;"	f	typeref:typename:char *
global	include/virtual_memory.h	/^                uint8_t global : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
gp	include/trap.h	/^    uint64_t gp;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
gp	vmm/vcpu.h	/^        uint64_t gp;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
gp	vmm/vcpu.h	/^        uint64_t gp;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
gp_hp_page_table	vmm/vcpu.h	/^    page_table_t gp_hp_page_table;$/;"	m	struct:virtual_cpu	typeref:typename:page_table_t
gp_hp_page_table_phy	vmm/vcpu.h	/^    page_table_t gp_hp_page_table_phy;$/;"	m	struct:virtual_cpu	typeref:typename:page_table_t
guest_context	vmm/vcpu.h	/^    } guest_context;$/;"	m	struct:virtual_cpu	typeref:struct:virtual_cpu::__anon800143b80108
guest_func	main.c	/^void guest_func(void)$/;"	f	typeref:typename:void
guest_memory_map	vmm/mmu.c	/^bool guest_memory_map(page_table_t root, uint64_t guest_physical,$/;"	f	typeref:typename:bool
handle_external_interrupt	interrupt.c	/^bool handle_external_interrupt(uint64_t irq)$/;"	f	typeref:typename:bool
heap_base_address	memory_manager.c	/^static uint64_t heap_base_address;$/;"	v	typeref:typename:uint64_t	file:
heap_end_address	memory_manager.c	/^static uint64_t heap_end_address;$/;"	v	typeref:typename:uint64_t	file:
hex_map	string.c	/^static const char hex_map[] = {$/;"	v	typeref:typename:const char[]	file:
hfence_bvma	vmm/hfence.S	/^hfence_bvma:$/;"	l
hfence_gvma	vmm/hfence.S	/^hfence_gvma:$/;"	l
hgatp	vmm/mmu.h	/^typedef struct hgatp$/;"	s
hgatp_t	vmm/mmu.h	/^} hgatp_t;$/;"	t	typeref:struct:hgatp
host_context	vmm/vcpu.h	/^    } host_context;$/;"	m	struct:virtual_cpu	typeref:struct:virtual_cpu::__anon800143b80208
hstatus	include/trap.h	/^    uint64_t hstatus;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
hstatus	vmm/vcpu.h	/^        uint64_t hstatus;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
hstatus	vmm/vcpu.h	/^        uint64_t hstatus;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
id	thread.h	/^    uint64_t id;$/;"	m	struct:thread_struct	typeref:typename:uint64_t
id	virtio_mmio.c	/^        uint32_t id;$/;"	m	struct:virtq_used::virtq_used_elem	typeref:typename:uint32_t	file:
ier	vmm/uart_emu.h	/^    uint8_t ier;$/;"	m	struct:uart_emulator	typeref:typename:uint8_t
illegal_instruction	include/exception.h	/^    illegal_instruction = 2,$/;"	e	enum:exception_code
index	virtio_mmio.c	/^        uint16_t index;$/;"	m	struct:virtqueue::virtq_avail	typeref:typename:uint16_t	file:
index	virtio_mmio.c	/^    uint16_t index;$/;"	m	struct:virtq_used	typeref:typename:uint16_t	file:
init_fdt	fdt.c	/^bool init_fdt(const uint64_t fdt_base)$/;"	f	typeref:typename:bool
init_plic	plic.c	/^bool init_plic(const struct memory_map_entry *plic_entry)$/;"	f	typeref:typename:bool
init_test_thread	thread.c	/^void init_test_thread(uint64_t entry)$/;"	f	typeref:typename:void
init_timer	timer.c	/^bool init_timer(void)$/;"	f	typeref:typename:bool
init_trap	trap.c	/^bool init_trap(uint64_t cpu_id)$/;"	f	typeref:typename:bool
init_uart	uart.c	/^bool init_uart(const struct memory_map_entry *uart_entry)$/;"	f	typeref:typename:bool
init_vcpu	vmm/vcpu.c	/^static bool init_vcpu(virtual_cpu_t *vcpu)$/;"	f	typeref:typename:bool	file:
init_virtio_block	virtio_mmio.c	/^static bool init_virtio_block(const uintptr_t base)$/;"	f	typeref:typename:bool	file:
init_virtio_mmio	virtio_mmio.c	/^bool init_virtio_mmio(void)$/;"	f	typeref:typename:bool
init_virtual_memory	virtual_memory.c	/^bool init_virtual_memory(void)$/;"	f	typeref:typename:bool
init_vmm	vmm/vmm.c	/^bool init_vmm(void)$/;"	f	typeref:typename:bool
instruction_access_fault	include/exception.h	/^    instruction_access_fault = 1,$/;"	e	enum:exception_code
instruction_addres_misaligned	include/exception.h	/^    instruction_addres_misaligned = 0,$/;"	e	enum:exception_code
instruction_emulation	vmm/inst_emu.c	/^bool instruction_emulation(virtual_cpu_t *vcpu, uint64_t instruction_address)$/;"	f	typeref:typename:bool
instruction_page_fault	include/exception.h	/^    instruction_page_fault = 12,$/;"	e	enum:exception_code
int_to_str	string.c	/^void int_to_str(uint64_t n, char *buffer) \/\/, int radix)$/;"	f	typeref:typename:void
interrupt	include/csr_type.h	/^        uint8_t interrupt : 1;$/;"	m	struct:scause::__anon5d1ae6370108	typeref:typename:uint8_t:1
interrupt_code	include/exception.h	/^enum interrupt_code$/;"	g
irq_numbers	interrupt.h	/^enum irq_numbers$/;"	g
kalloc	memory_manager.c	/^void *kalloc(const size_t size)$/;"	f	typeref:typename:void *
kalloc_16k	memory_manager.c	/^void *kalloc_16k(void)$/;"	f	typeref:typename:void *
kalloc_4k	memory_manager.c	/^void *kalloc_4k(void)$/;"	f	typeref:typename:void *
kernel_root_page_table	virtual_memory.c	/^page_table_t kernel_root_page_table;$/;"	v	typeref:typename:page_table_t
kernel_sp	include/trap.h	/^    uint64_t kernel_sp;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
kernel_stack	include/trap.h	/^    uint64_t kernel_stack;$/;"	m	struct:thread_info	typeref:typename:uint64_t
knalloc_4k	memory_manager.c	/^void *knalloc_4k(int n)$/;"	f	typeref:typename:void *
kthread_0	main.c	/^void kthread_0(void)$/;"	f	typeref:typename:void
last_comp_version	include/fdt_core.h	/^    uint32_t last_comp_version;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
len	include/fdt.h	/^    size_t len; \/\/ number of words$/;"	m	struct:property	typeref:typename:size_t
len	include/fdt_core.h	/^    uint32_t len;$/;"	m	struct:property_info	typeref:typename:uint32_t
len	virtio_mmio.c	/^        uint32_t len;$/;"	m	struct:virtq_used::virtq_used_elem	typeref:typename:uint32_t	file:
len	virtio_mmio.c	/^        uint32_t len;$/;"	m	struct:virtqueue::virtq_desc	typeref:typename:uint32_t	file:
list	fdt.c	/^    struct list$/;"	s	function:get_next_name	file:
load_access_fault	include/exception.h	/^    load_access_fault = 5,$/;"	e	enum:exception_code
load_address_misaligned	include/exception.h	/^    load_address_misaligned = 4,$/;"	e	enum:exception_code
load_emulation	vmm/inst_emu.c	/^static bool load_emulation(virtual_cpu_t *vcpu, uint64_t target_address,$/;"	f	typeref:typename:bool	file:
load_page_fault	include/exception.h	/^    load_page_fault = 13,$/;"	e	enum:exception_code
magic	include/fdt_core.h	/^    uint32_t magic;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
map_kernel_virtual_memory	virtual_memory.c	/^bool map_kernel_virtual_memory(physical_address_t p_address,$/;"	f	typeref:typename:bool
memory_block	fdt.c	/^static fdt_reserve_entry_t *memory_block;$/;"	v	typeref:typename:fdt_reserve_entry_t *	file:
memory_copy	string.c	/^void memory_copy(void *destination, void *source, size_t size)$/;"	f	typeref:typename:void
memory_map	memory_map_content.c	/^const struct memory_map_entry memory_map[] = {$/;"	v	typeref:typename:const struct memory_map_entry[]
memory_map_entry	include/memory_map.h	/^struct memory_map_entry$/;"	s
memory_reserved_entry	include/fdt_core.h	/^typedef struct memory_reserved_entry$/;"	s
memory_set	string.c	/^void memory_set(void *destination, uint8_t byte, size_t size)$/;"	f	typeref:typename:void
mmio_base	virtio_mmio.c	/^    uint32_t* mmio_base;$/;"	m	struct:virtio_block	typeref:typename:uint32_t *	file:
mode	include/virtual_memory.h	/^            uint8_t mode : 4;   \/\/ mode$/;"	m	struct:satp::__anond7b35bcd010a::__anond7b35bcd0208	typeref:typename:uint8_t:4
mode	vmm/mmu.h	/^            uint8_t mode : 4;$/;"	m	struct:hgatp::__anon77a0c4e9010a::__anon77a0c4e90208	typeref:typename:uint8_t:4
name	include/fdt.h	/^    char *name;$/;"	m	struct:property	typeref:typename:char *
name	include/fdt_core.h	/^    char *name;$/;"	m	struct:devicetree	typeref:typename:char *
nameoff	include/fdt_core.h	/^    uint32_t nameoff;$/;"	m	struct:property_info	typeref:typename:uint32_t
next	fdt.c	/^        struct list *next;$/;"	m	struct:get_next_name::list	typeref:struct:list *	file:
next	include/fdt.h	/^    struct property *next;$/;"	m	struct:property	typeref:struct:property *
next	include/fdt_core.h	/^    struct devicetree *next;$/;"	m	struct:devicetree	typeref:struct:devicetree *
next	thread.h	/^    struct thread_struct* next;$/;"	m	struct:thread_struct	typeref:struct:thread_struct *
next	virtio_mmio.c	/^        uint16_t next;$/;"	m	struct:virtqueue::virtq_desc	typeref:typename:uint16_t	file:
not_yet_implemented	utils.c	/^void not_yet_implemented(bool is_critical, const char* message)$/;"	f	typeref:typename:void
off_dt_strings	include/fdt_core.h	/^    uint32_t off_dt_strings;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
off_dt_struct	include/fdt_core.h	/^    uint32_t off_dt_struct;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
off_mem_rsvmap	include/fdt_core.h	/^    uint32_t off_mem_rsvmap;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
page_table	thread.h	/^    page_table_t page_table;$/;"	m	struct:thread_struct	typeref:typename:page_table_t
page_table_entry_t	include/virtual_memory.h	/^} page_table_entry_t;$/;"	t	typeref:struct:sv39_page_table_entry
page_table_t	include/virtual_memory.h	/^typedef page_table_entry_t *page_table_t;$/;"	t	typeref:typename:page_table_entry_t *
page_walk	virtual_memory.c	/^page_table_entry_t *page_walk(const page_table_t root,$/;"	f	typeref:typename:page_table_entry_t *
page_walk_sv39x4	vmm/mmu.c	/^page_table_entry_t *page_walk_sv39x4(page_table_t root,$/;"	f	typeref:typename:page_table_entry_t *
panic	utils.c	/^void panic(const char *text)$/;"	f	typeref:typename:void
parse_fdt	fdt.c	/^static device_tree_t *parse_fdt(const fdt_header_t *header)$/;"	f	typeref:typename:device_tree_t *	file:
parse_node	fdt.c	/^device_tree_t *parse_node(int *index)$/;"	f	typeref:typename:device_tree_t *
parse_property	fdt.c	/^property_t *parse_property(int *index)$/;"	f	typeref:typename:property_t *
physical_address_t	include/virtual_memory.h	/^typedef uint64_t physical_address_t;$/;"	t	typeref:typename:uint64_t
plic	vmm/vcpu.h	/^    plic_emulator_t *plic;$/;"	m	struct:virtual_cpu	typeref:typename:plic_emulator_t *
plic_claim	plic.c	/^uint64_t plic_claim(void)$/;"	f	typeref:typename:uint64_t
plic_complete	plic.c	/^void plic_complete(uint64_t irq)$/;"	f	typeref:typename:void
plic_emulate_store	vmm/plic_emu.c	/^bool plic_emulate_store(virtual_cpu_t *vcpu, uint64_t target, uint64_t value,$/;"	f	typeref:typename:bool
plic_emulator	vmm/plic_emu.h	/^typedef struct plic_emulator$/;"	s
plic_emulator_t	vmm/plic_emu.h	/^} plic_emulator_t;$/;"	t	typeref:struct:plic_emulator
plic_emulator_t	vmm/vcpu.h	/^typedef struct plic_emulator plic_emulator_t;$/;"	t	typeref:struct:plic_emulator
post_init_memory_manager	memory_manager.c	/^bool post_init_memory_manager(void)$/;"	f	typeref:typename:bool
ppn	include/virtual_memory.h	/^            uint64_t ppn : 44;  \/\/ physical page number$/;"	m	struct:satp::__anond7b35bcd010a::__anond7b35bcd0208	typeref:typename:uint64_t:44
ppn	vmm/mmu.h	/^            uint64_t ppn : 44;$/;"	m	struct:hgatp::__anon77a0c4e9010a::__anon77a0c4e90208	typeref:typename:uint64_t:44
ppn_0	include/virtual_memory.h	/^            uint16_t ppn_0 : 9;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408	typeref:typename:uint16_t:9
ppn_1	include/virtual_memory.h	/^            uint16_t ppn_1 : 9;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408	typeref:typename:uint16_t:9
ppn_2	include/virtual_memory.h	/^            uint32_t ppn_2 : 26;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408	typeref:typename:uint32_t:26
pre_init_memory_manager	memory_manager.c	/^bool pre_init_memory_manager(void)$/;"	f	typeref:typename:bool
priority_registers	vmm/plic_emu.h	/^    uint32_t priority_registers[SIFIVE_IRQ_NUMBER_MAX];$/;"	m	struct:plic_emulator	typeref:typename:uint32_t[]
properties	include/fdt_core.h	/^    property_t *properties;$/;"	m	struct:devicetree	typeref:typename:property_t *
property	include/fdt.h	/^typedef struct property$/;"	s
property_info	include/fdt_core.h	/^typedef struct property_info$/;"	s
property_info_t	include/fdt_core.h	/^} property_info_t;$/;"	t	typeref:struct:property_info
property_t	include/fdt.h	/^} property_t;$/;"	t	typeref:struct:property
put_char	io_interface.c	/^void put_char(char c) { write_char_by_uart(c); }$/;"	f	typeref:typename:void
put_string	io_interface.c	/^void put_string(const char *string)$/;"	f	typeref:typename:void
ra	include/trap.h	/^    uint64_t ra;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
ra	thread.h	/^    uint64_t ra;$/;"	m	struct:context	typeref:typename:uint64_t
ra	vmm/vcpu.h	/^        uint64_t ra;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
ra	vmm/vcpu.h	/^        uint64_t ra;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
rdtime	timer.c	/^uint64_t rdtime(void)$/;"	f	typeref:typename:uint64_t
read_char_by_uart	uart.c	/^bool read_char_by_uart(uint8_t *c)$/;"	f	typeref:typename:bool
read_guest_instuction	vmm/inst_emu.c	/^bool read_guest_instuction(virtual_cpu_t* vcpu, uint64_t address, uint32_t* instruction)$/;"	f	typeref:typename:bool
read_tp	register.c	/^uint64_t read_tp(void)$/;"	f	typeref:typename:uint64_t
readable	include/virtual_memory.h	/^                uint8_t readable : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
ready	scheduler.c	/^thread_struct_t *ready, *sleep;$/;"	v	typeref:struct:thread_info thread_struct_t *
register_read	uart.c	/^static uint8_t register_read(uint8_t offset)$/;"	f	typeref:typename:uint8_t	file:
register_write	uart.c	/^static void register_write(uint8_t offset, uint8_t value)$/;"	f	typeref:typename:void	file:
request_status	virtio_mmio.c	/^    uint8_t request_status[VIRTIO_QUEUE_SIZE];$/;"	m	struct:virtio_block	typeref:typename:uint8_t[]	file:
reserved	include/virtual_memory.h	/^            uint16_t reserved : 10;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408	typeref:typename:uint16_t:10
reserved	virtio_mmio.c	/^    uint32_t reserved;$/;"	m	struct:virtio_blk_req	typeref:typename:uint32_t	file:
reserved	vmm/mmu.h	/^            uint8_t reserved : 2;$/;"	m	struct:hgatp::__anon77a0c4e9010a::__anon77a0c4e90208	typeref:typename:uint8_t:2
return_from_exception	trap_handler.S	/^return_from_exception:$/;"	l
rhr	vmm/uart_emu.h	/^    uint8_t rhr;$/;"	m	struct:uart_emulator	typeref:typename:uint8_t
ring	virtio_mmio.c	/^        uint16_t ring[VIRTIO_QUEUE_SIZE];$/;"	m	struct:virtqueue::virtq_avail	typeref:typename:uint16_t[]	file:
ring	virtio_mmio.c	/^    } ring[VIRTIO_QUEUE_SIZE];$/;"	m	struct:virtq_used	typeref:struct:virtq_used::virtq_used_elem[]	file:
rsw	include/virtual_memory.h	/^            uint8_t rsw : 2; \/\/ the supervisor can use this bits.$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408	typeref:typename:uint8_t:2
run	Makefile	/^run: $(IMAGE)$/;"	t
run_guest	vmm/vcpu.c	/^void run_guest(virtual_cpu_t *vcpu)$/;"	f	typeref:typename:void
run_test_guest	vmm/test_guest.c	/^bool run_test_guest(void)$/;"	f	typeref:typename:bool
s0	include/trap.h	/^    uint64_t s0;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s0	thread.h	/^    uint64_t s0;$/;"	m	struct:context	typeref:typename:uint64_t
s0	vmm/vcpu.h	/^        uint64_t s0;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s0	vmm/vcpu.h	/^        uint64_t s0;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s1	include/trap.h	/^    uint64_t s1;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s1	thread.h	/^    uint64_t s1;$/;"	m	struct:context	typeref:typename:uint64_t
s1	vmm/vcpu.h	/^        uint64_t s1;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s1	vmm/vcpu.h	/^        uint64_t s1;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s10	include/trap.h	/^    uint64_t s10;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s10	thread.h	/^    uint64_t s10;$/;"	m	struct:context	typeref:typename:uint64_t
s10	vmm/vcpu.h	/^        uint64_t s10;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s10	vmm/vcpu.h	/^        uint64_t s10;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s11	include/trap.h	/^    uint64_t s11;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s11	thread.h	/^    uint64_t s11;$/;"	m	struct:context	typeref:typename:uint64_t
s11	vmm/vcpu.h	/^        uint64_t s11;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s11	vmm/vcpu.h	/^        uint64_t s11;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s2	include/trap.h	/^    uint64_t s2;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s2	thread.h	/^    uint64_t s2;$/;"	m	struct:context	typeref:typename:uint64_t
s2	vmm/vcpu.h	/^        uint64_t s2;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s2	vmm/vcpu.h	/^        uint64_t s2;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s3	include/trap.h	/^    uint64_t s3;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s3	thread.h	/^    uint64_t s3;$/;"	m	struct:context	typeref:typename:uint64_t
s3	vmm/vcpu.h	/^        uint64_t s3;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s3	vmm/vcpu.h	/^        uint64_t s3;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s4	include/trap.h	/^    uint64_t s4;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s4	thread.h	/^    uint64_t s4;$/;"	m	struct:context	typeref:typename:uint64_t
s4	vmm/vcpu.h	/^        uint64_t s4;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s4	vmm/vcpu.h	/^        uint64_t s4;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s5	include/trap.h	/^    uint64_t s5;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s5	thread.h	/^    uint64_t s5;$/;"	m	struct:context	typeref:typename:uint64_t
s5	vmm/vcpu.h	/^        uint64_t s5;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s5	vmm/vcpu.h	/^        uint64_t s5;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s6	include/trap.h	/^    uint64_t s6;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s6	thread.h	/^    uint64_t s6;$/;"	m	struct:context	typeref:typename:uint64_t
s6	vmm/vcpu.h	/^        uint64_t s6;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s6	vmm/vcpu.h	/^        uint64_t s6;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s7	include/trap.h	/^    uint64_t s7;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s7	thread.h	/^    uint64_t s7;$/;"	m	struct:context	typeref:typename:uint64_t
s7	vmm/vcpu.h	/^        uint64_t s7;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s7	vmm/vcpu.h	/^        uint64_t s7;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s8	include/trap.h	/^    uint64_t s8;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s8	thread.h	/^    uint64_t s8;$/;"	m	struct:context	typeref:typename:uint64_t
s8	vmm/vcpu.h	/^        uint64_t s8;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s8	vmm/vcpu.h	/^        uint64_t s8;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
s9	include/trap.h	/^    uint64_t s9;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
s9	thread.h	/^    uint64_t s9;$/;"	m	struct:context	typeref:typename:uint64_t
s9	vmm/vcpu.h	/^        uint64_t s9;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
s9	vmm/vcpu.h	/^        uint64_t s9;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
satp	include/virtual_memory.h	/^typedef struct satp$/;"	s
satp_t	include/virtual_memory.h	/^} satp_t;$/;"	t	typeref:struct:satp
sbi_console_putchar	sbi.h	/^static inline void sbi_console_putchar(char c)$/;"	f	typeref:typename:void
sbi_set_timer	sbi.h	/^static inline void sbi_set_timer(uint64_t stime_value)$/;"	f	typeref:typename:void
sbi_shutdown	sbi.h	/^static inline void sbi_shutdown(void)$/;"	f	typeref:typename:void
scause	include/csr_type.h	/^typedef union scause$/;"	u
scause	include/trap.h	/^    csr_scause_t scause;$/;"	m	struct:trap_frame	typeref:typename:csr_scause_t
search_node	fdt.c	/^device_tree_t *search_node(device_tree_t *dt, const char *node_path)$/;"	f	typeref:typename:device_tree_t *
search_node	vmm/fdt_edit.c	/^static uint32_t *search_node(uint32_t *base, const char *name, size_t *index)$/;"	f	typeref:typename:uint32_t *	file:
search_prop	vmm/fdt_edit.c	/^static uint32_t *search_prop(uint32_t *struct_base, uint32_t *string_base,$/;"	f	typeref:typename:uint32_t *	file:
sector	virtio_mmio.c	/^    uint64_t sector;$/;"	m	struct:virtio_blk_req	typeref:typename:uint64_t	file:
sepc	include/trap.h	/^    uint64_t sepc;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
sepc	vmm/vcpu.h	/^        uint64_t sepc;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
setup_guest_state	vmm/test_guest.c	/^static void setup_guest_state(virtual_cpu_t *vcpu)$/;"	f	typeref:typename:void	file:
setup_hypervisor_deleg_csr	vmm/vmm.c	/^static void setup_hypervisor_deleg_csr(void)$/;"	f	typeref:typename:void	file:
setup_test_guest	vmm/vcpu.c	/^bool setup_test_guest(virtual_cpu_t *vcpu, uint64_t guest_func)$/;"	f	typeref:typename:bool
size	include/fdt_core.h	/^    uint64_t size;$/;"	m	struct:memory_reserved_entry	typeref:typename:uint64_t
size	include/memory_map.h	/^    uintptr_t size;$/;"	m	struct:memory_map_entry	typeref:typename:uintptr_t
size	vmm/vcpu.h	/^        size_t size;$/;"	m	struct:virtual_cpu::__anon800143b80408	typeref:typename:size_t
size_dt_strings	include/fdt_core.h	/^    uint32_t size_dt_strings;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
size_dt_struct	include/fdt_core.h	/^    uint32_t size_dt_struct;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
sleep	scheduler.c	/^thread_struct_t *ready, *sleep;$/;"	v	typeref:struct:thread_info thread_struct_t **
sp	include/trap.h	/^    uint64_t sp;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
sp	thread.h	/^    uint64_t sp;$/;"	m	struct:context	typeref:typename:uint64_t
sp	vmm/vcpu.h	/^        uint64_t sp;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
sp	vmm/vcpu.h	/^        uint64_t sp;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
sscratch	include/trap.h	/^    uint64_t sscratch;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
sscratch	vmm/vcpu.h	/^        uint64_t sscratch;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
sstatus	include/trap.h	/^    uint64_t sstatus;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
sstatus	vmm/vcpu.h	/^        uint64_t sstatus;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
sstatus	vmm/vcpu.h	/^        uint64_t sstatus;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
start_kernel	main.c	/^void start_kernel(uint64_t hart_id, uintptr_t device_tree_base)$/;"	f	typeref:typename:void
state	vmm/vcpu.h	/^    vcpu_state_t state;$/;"	m	struct:virtual_cpu	typeref:typename:vcpu_state_t
store_amo_access_fault	include/exception.h	/^    store_amo_access_fault = 7,$/;"	e	enum:exception_code
store_amo_address_misaligned	include/exception.h	/^    store_amo_address_misaligned = 6,$/;"	e	enum:exception_code
store_amo_page_fault	include/exception.h	/^    store_amo_page_fault = 15,$/;"	e	enum:exception_code
store_emulation	vmm/inst_emu.c	/^static bool store_emulation(virtual_cpu_t *vcpu, uint64_t target_address,$/;"	f	typeref:typename:bool	file:
string_block	fdt.c	/^static char *string_block;$/;"	v	typeref:typename:char *	file:
string_compare	string.c	/^bool string_compare(const char *str_1, const char *str_2, const size_t size)$/;"	f	typeref:typename:bool
string_length	string.c	/^size_t string_length(const char *str)$/;"	f	typeref:typename:size_t
struct_block	fdt.c	/^static fdt_struct_entry_t *struct_block;$/;"	v	typeref:typename:fdt_struct_entry_t *	file:
stval	include/trap.h	/^    uint64_t stval;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
stvec	vmm/vcpu.h	/^        uint64_t stvec;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
subnodes	include/fdt_core.h	/^    struct devicetree *subnodes;$/;"	m	struct:devicetree	typeref:struct:devicetree *
supervisor_external_interrupt	include/exception.h	/^    supervisor_external_interrupt = 9,$/;"	e	enum:interrupt_code
supervisor_software_interrupt	include/exception.h	/^    supervisor_software_interrupt = 1,$/;"	e	enum:interrupt_code
supervisor_timer_interrupt	include/exception.h	/^    supervisor_timer_interrupt = 5,$/;"	e	enum:interrupt_code
sv39_page_table_entry	include/virtual_memory.h	/^typedef struct sv39_page_table_entry$/;"	s
switch_to_guest	vmm/enter.S	/^switch_to_guest:$/;"	l
t0	include/trap.h	/^    uint64_t t0;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t0	vmm/vcpu.h	/^        uint64_t t0;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t0	vmm/vcpu.h	/^        uint64_t t0;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
t1	include/trap.h	/^    uint64_t t1;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t1	vmm/vcpu.h	/^        uint64_t t1;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t1	vmm/vcpu.h	/^        uint64_t t1;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
t2	include/trap.h	/^    uint64_t t2;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t2	vmm/vcpu.h	/^        uint64_t t2;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t2	vmm/vcpu.h	/^        uint64_t t2;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
t3	include/trap.h	/^    uint64_t t3;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t3	vmm/vcpu.h	/^        uint64_t t3;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t3	vmm/vcpu.h	/^        uint64_t t3;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
t4	include/trap.h	/^    uint64_t t4;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t4	vmm/vcpu.h	/^        uint64_t t4;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t4	vmm/vcpu.h	/^        uint64_t t4;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
t5	include/trap.h	/^    uint64_t t5;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t5	vmm/vcpu.h	/^        uint64_t t5;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t5	vmm/vcpu.h	/^        uint64_t t5;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
t6	include/trap.h	/^    uint64_t t6;$/;"	m	struct:trap_frame	typeref:typename:uint64_t
t6	vmm/vcpu.h	/^        uint64_t t6;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
t6	vmm/vcpu.h	/^        uint64_t t6;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
task_switch	thread.c	/^void task_switch(thread_struct_t *prev_thread, thread_struct_t *next_thread)$/;"	f	typeref:typename:void
test	thread.c	/^void test(void)$/;"	f	typeref:typename:void
test_thread	thread.c	/^static thread_struct_t test_thread;$/;"	v	typeref:typename:thread_struct_t	file:
thr	vmm/uart_emu.h	/^    uint8_t thr;$/;"	m	struct:uart_emulator	typeref:typename:uint8_t
thread_id	thread.c	/^static size_t thread_id = 0;$/;"	v	typeref:typename:size_t	file:
thread_info	include/trap.h	/^typedef struct thread_info$/;"	s
thread_info	scheduler.c	/^struct thread_info$/;"	s	file:
thread_info_1	thread.c	/^static thread_info_t thread_info_1;$/;"	v	typeref:typename:thread_info_t	file:
thread_info_t	include/trap.h	/^} thread_info_t;$/;"	t	typeref:struct:thread_info
thread_struct	thread.h	/^typedef struct thread_struct$/;"	s
thread_struct_t	thread.h	/^} thread_struct_t;$/;"	t	typeref:struct:thread_struct
thread_swap_test	thread.c	/^void thread_swap_test(void)$/;"	f	typeref:typename:void
ticks	timer.c	/^static uint64_t ticks;$/;"	v	typeref:typename:uint64_t	file:
totalsize	include/fdt_core.h	/^    uint32_t totalsize;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
tp	include/trap.h	/^    thread_info_t *tp;$/;"	m	struct:trap_frame	typeref:typename:thread_info_t *
tp	vmm/vcpu.h	/^        uint64_t tp;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
tp	vmm/vcpu.h	/^        uint64_t tp;$/;"	m	struct:virtual_cpu::__anon800143b80208	typeref:typename:uint64_t
trap_frame	include/trap.h	/^typedef struct trap_frame$/;"	s
trap_frame_t	include/trap.h	/^} trap_frame_t;$/;"	t	typeref:struct:trap_frame
trap_handler	trap_handler.S	/^trap_handler:$/;"	l
type	virtio_mmio.c	/^    uint32_t type;$/;"	m	struct:virtio_blk_req	typeref:typename:uint32_t	file:
uart	vmm/vcpu.h	/^    uart_emulator_t *uart;$/;"	m	struct:virtual_cpu	typeref:typename:uart_emulator_t *
uart_0	interrupt.h	/^    uart_0 = 0xa,$/;"	e	enum:irq_numbers
uart_emulation_load	vmm/uart_emu.c	/^bool uart_emulation_load(virtual_cpu_t* vcpu, uint64_t target, uint64_t* value, uint8_t width)$/;"	f	typeref:typename:bool
uart_emulation_store	vmm/uart_emu.c	/^bool uart_emulation_store(virtual_cpu_t *vcpu, uint64_t target, uint64_t value, uint8_t width)$/;"	f	typeref:typename:bool
uart_emulator	vmm/uart_emu.h	/^typedef struct uart_emulator$/;"	s
uart_emulator_t	vmm/uart_emu.h	/^} uart_emulator_t;$/;"	t	typeref:struct:uart_emulator
uart_emulator_t	vmm/vcpu.h	/^typedef struct uart_emulator uart_emulator_t;$/;"	t	typeref:struct:uart_emulator
uart_mmio_base	uart.c	/^static uintptr_t uart_mmio_base;$/;"	v	typeref:typename:uintptr_t	file:
update_hgatp	vmm/mmu.c	/^void update_hgatp(page_table_t table)$/;"	f	typeref:typename:void
used	virtio_mmio.c	/^    virtq_used_t *used;$/;"	m	struct:virtio_block	typeref:typename:virtq_used_t *	file:
used_event	virtio_mmio.c	/^        uint16_t used_event;$/;"	m	struct:virtqueue::virtq_avail	typeref:typename:uint16_t	file:
user	include/virtual_memory.h	/^                uint8_t user : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
user_external_interrupt	include/exception.h	/^    user_external_interrupt = 8,$/;"	e	enum:interrupt_code
user_software_interrupt	include/exception.h	/^    user_software_interrupt = 0,$/;"	e	enum:interrupt_code
user_stack	include/trap.h	/^    uint64_t user_stack;$/;"	m	struct:thread_info	typeref:typename:uint64_t
user_timer_interrupt	include/exception.h	/^    user_timer_interrupt = 4,$/;"	e	enum:interrupt_code
valid	include/virtual_memory.h	/^                uint8_t valid : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
value	fdt.c	/^        uint32_t value;$/;"	m	struct:get_next_name::list	typeref:typename:uint32_t	file:
value	include/csr_type.h	/^    uint64_t value;$/;"	m	union:scause	typeref:typename:uint64_t
value	include/fdt.h	/^    uint32_t *value;$/;"	m	struct:property	typeref:typename:uint32_t *
value	include/virtual_memory.h	/^        uint64_t value;$/;"	m	union:satp::__anond7b35bcd010a	typeref:typename:uint64_t
value	include/virtual_memory.h	/^        uint64_t value;$/;"	m	union:sv39_page_table_entry::__anond7b35bcd030a	typeref:typename:uint64_t
value	vmm/mmu.h	/^        uint64_t value;$/;"	m	union:hgatp::__anon77a0c4e9010a	typeref:typename:uint64_t
vcpu_load_vcsr	vmm/vcpu.c	/^void vcpu_load_vcsr(virtual_cpu_t *vcpu)$/;"	f	typeref:typename:void
vcpu_set_pc	vmm/vcpu.c	/^void vcpu_set_pc(virtual_cpu_t *vcpu, uint64_t pc)$/;"	f	typeref:typename:void
vcpu_set_sp	vmm/vcpu.c	/^void vcpu_set_sp(virtual_cpu_t *vcpu, uint64_t sp)$/;"	f	typeref:typename:void
vcpu_state	vmm/vcpu.h	/^typedef enum vcpu_state$/;"	g
vcpu_state_t	vmm/vcpu.h	/^} vcpu_state_t;$/;"	t	typeref:enum:vcpu_state
vcpu_store_vcsr	vmm/vcpu.c	/^void vcpu_store_vcsr(virtual_cpu_t *vcpu)$/;"	f	typeref:typename:void
vcsr	vmm/vcpu.h	/^    } vcsr;$/;"	m	struct:virtual_cpu	typeref:struct:virtual_cpu::__anon800143b80308
version	include/fdt_core.h	/^    uint32_t version;$/;"	m	struct:fdt_header	typeref:typename:uint32_t
virtio_blk_req	virtio_mmio.c	/^typedef struct virtio_blk_req$/;"	s	file:
virtio_blk_req_t	virtio_mmio.c	/^} virtio_blk_req_t;$/;"	t	typeref:struct:virtio_blk_req	file:
virtio_block	virtio_mmio.c	/^static virtio_block_t virtio_block;$/;"	v	typeref:typename:virtio_block_t	file:
virtio_block	virtio_mmio.c	/^typedef struct virtio_block$/;"	s	file:
virtio_block_request	virtio_mmio.c	/^void virtio_block_request(bool write, uint64_t* base_ptr)$/;"	f	typeref:typename:void
virtio_block_t	virtio_mmio.c	/^} virtio_block_t;$/;"	t	typeref:struct:virtio_block	file:
virtq_avail	virtio_mmio.c	/^    struct virtq_avail$/;"	s	struct:virtqueue	file:
virtq_desc	virtio_mmio.c	/^    struct virtq_desc$/;"	s	struct:virtqueue	file:
virtq_used	virtio_mmio.c	/^typedef struct virtq_used$/;"	s	file:
virtq_used_elem	virtio_mmio.c	/^    struct virtq_used_elem$/;"	s	struct:virtq_used	file:
virtq_used_t	virtio_mmio.c	/^} virtq_used_t;$/;"	t	typeref:struct:virtq_used	file:
virtqueue	virtio_mmio.c	/^typedef struct virtqueue$/;"	s	file:
virtqueue_pre_t	virtio_mmio.c	/^} virtqueue_pre_t;$/;"	t	typeref:struct:virtqueue	file:
virtual_address_t	include/virtual_memory.h	/^typedef uint64_t virtual_address_t;$/;"	t	typeref:typename:uint64_t
virtual_cpu	vmm/vcpu.h	/^typedef struct virtual_cpu$/;"	s
virtual_cpu_t	vmm/vcpu.h	/^} virtual_cpu_t;$/;"	t	typeref:struct:virtual_cpu
virtual_machine	vmm/vm.h	/^typedef struct virtual_machine$/;"	s
virtual_machine_t	vmm/vm.h	/^} virtual_machine_t;$/;"	t	typeref:struct:virtual_machine
virtual_memory_map	virtual_memory.c	/^bool virtual_memory_map(page_table_t page_table, physical_address_t p_address,$/;"	f	typeref:typename:bool
vm_trap_handler	vmm/trap.S	/^vm_trap_handler:$/;"	l
vmid	vmm/mmu.h	/^            uint16_t vmid : 14;$/;"	m	struct:hgatp::__anon77a0c4e9010a::__anon77a0c4e90208	typeref:typename:uint16_t:14
vsatp	vmm/vcpu.h	/^        uint64_t vsatp;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vscause	vmm/vcpu.h	/^        uint64_t vscause;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vsepc	vmm/vcpu.h	/^        uint64_t vsepc;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vsie	vmm/vcpu.h	/^        uint64_t vsie;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vsip	vmm/vcpu.h	/^        uint64_t vsip;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vsscratch	vmm/vcpu.h	/^        uint64_t vsscratch;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vsstatus	vmm/vcpu.h	/^        uint64_t vsstatus;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vstval	vmm/vcpu.h	/^        uint64_t vstval;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
vstvec	vmm/vcpu.h	/^        uint64_t vstvec;$/;"	m	struct:virtual_cpu::__anon800143b80308	typeref:typename:uint64_t
writable	include/virtual_memory.h	/^                uint8_t writable : 1;$/;"	m	struct:sv39_page_table_entry::__anond7b35bcd030a::__anond7b35bcd0408::__anond7b35bcd0508	typeref:typename:uint8_t:1
write_char_by_uart	uart.c	/^void write_char_by_uart(char c)$/;"	f	typeref:typename:void
write_page_table	virtual_memory.c	/^void write_page_table(const page_table_t page_table)$/;"	f	typeref:typename:void
write_tp	register.c	/^void write_tp(uint64_t value) { __asm__ volatile("mv tp, %0" : : "r"(value)); }$/;"	f	typeref:typename:void
zero	vmm/vcpu.h	/^        uint64_t zero;$/;"	m	struct:virtual_cpu::__anon800143b80108	typeref:typename:uint64_t
